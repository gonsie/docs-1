.\" Man page generated from reStructuredText.
.
.TH "FLUX_CORE_VERSION" "3" "Jan 13, 2020" "" "Flux"
.SH NAME
flux_core_version \- get flux-core version
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <flux/core.h>

int flux_core_version (int *major, int *minor, int *patch);

const char *flux_core_version_string (void);
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
flux\-core defines several macros and functions to let API users
determine the version they are working with. A version has three
components (\fImajor\fP, \fIminor\fP, \fIpatch\fP), accessible with the following
macros:
.INDENT 0.0
.TP
.B FLUX_CORE_VERSION_MAJOR
(integer) incremented when there are incompatible API changes
.TP
.B FLUX_CORE_VERSION_MINOR
(integer) incremented when functionality is added in a
backwards\-compatible manner
.TP
.B FLUX_CORE_VERSION_PATCH
(integer) incremented when bug fixes are added in a
backwards\-compatible manner
.UNINDENT
.sp
These definitions conform to the \fIsemantic versioning\fP standard (see
below). In addition, the following convenience macros are available:
.INDENT 0.0
.TP
.B FLUX_CORE_VERSION_HEX
(hex) the three versions combined into a three\-byte integer value,
useful for comparing versions with \fI<\fP, \fI=\fP, and \fI>\fP operators.
.TP
.B FLUX_CORE_VERSION_STRING
(string) the three versions above separated by periods, with optional
\fBgit\-describe(1)\fP suffix preceded by a hyphen, if the version is a
development snapshot.
.UNINDENT
.sp
Note that major version zero (0.y.z) is for initial development. Under
version zero, the public API should not be considered stable.
.sp
Functions are also available to access the same values. While the header
macros tell what version of flux\-core your program was compiled against,
the functions tell what version your program is dynamically linked with.
.sp
\fBflux_core_version()\fP sets \fImajor\fP, \fIminor\fP, and \fIpatch\fP to the values
of the macros above. If any parameters are NULL, no assignment is
attempted.
.sp
\fBflux_core_version_string()\fP returns the string value.
.SH RETURN VALUE
.sp
\fBflux_core_version ()\fP returns the hex version.
.sp
\fBflux_core_version_string ()\fP returns the version string
.SH ERRORS
.sp
These functions cannot fail.
.SH AUTHOR
.sp
This page is maintained by the Flux community.
.SH RESOURCES
.sp
Github: <\fI\%http://github.com/flux\-framework\fP>
.SH COPYRIGHT
.sp
Copyright 2014 Lawrence Livermore National Security, LLC and Flux
developers.
.sp
SPDX\-License\-Identifier: LGPL\-3.0
.SH SEE ALSO
.sp
semver.org[Semantic Versioning 2.0.0]
.SH AUTHOR
LLNL
.SH COPYRIGHT
2020, LLNL
.\" Generated by docutils manpage writer.
.
